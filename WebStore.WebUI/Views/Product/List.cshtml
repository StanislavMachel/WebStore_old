@*@using MvcContrib.UI.Pager
@using MvcContrib.Pagination*@
@using PagedList
@using PagedList.Mvc
@model IEnumerable<WebStore.Domain.Entities.Product>

@{
    ViewBag.Title = "List";
}


@*@using (Ajax.BeginForm("Index", "Product",
            new AjaxOptions
            {
                HttpMethod = "GET",
                UpdateTargetId = "productTable"
            }))

{
    @Html.TextBox("q", null, htmlAttributes: new { @class = "form-control col-sm-2" })
    <button type="submit" class="btn btn-default">
        <span class="glyphicon glyphicon-search"></span> Search
    </button>
}*@

@using (Html.BeginForm("List", "Product", FormMethod.Get))
{
    @Html.TextBox("q", null, htmlAttributes: new { @class = "form-control col-sm-2" })
    <button type="submit" class="btn btn-default">
        <span class="glyphicon glyphicon-search"></span> Search
    </button>
}
<br />
<div id="productTable">
    @{ 
        Html.RenderPartial("_ProductTable", Model);
    }
</div>
<br />

@Html.PagedListPager((IPagedList)Model,
                     page => Url.Action("List", new { page, q = Request.QueryString["q"] , category = Request.QueryString["category"] }),
                     new PagedListRenderOptions() {
                         Display = PagedListDisplayMode.IfNeeded,
                         DisplayPageCountAndCurrentLocation = true,
                         MaximumPageNumbersToDisplay = 3,
                         DisplayLinkToLastPage = PagedListDisplayMode.Always,
                         DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                         DisplayLinkToNextPage = PagedListDisplayMode.Always,
                         DisplayLinkToPreviousPage = PagedListDisplayMode.Always

                    })




<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>